basePath: /api/v1
definitions:
  models.Memory:
    properties:
      messages:
        items:
          $ref: '#/definitions/models.Message'
        type: array
      metadata:
        additionalProperties: true
        type: object
      summary:
        $ref: '#/definitions/models.Summary'
    type: object
  models.MemorySearchPayload:
    properties:
      metadata:
        additionalProperties: true
        type: object
      text:
        type: string
    type: object
  models.MemorySearchResult:
    properties:
      dist:
        type: number
      message:
        $ref: '#/definitions/models.Message'
      metadata:
        additionalProperties: true
        type: object
      summary:
        allOf:
        - $ref: '#/definitions/models.Summary'
        description: reserved for future use
    type: object
  models.Message:
    properties:
      content:
        type: string
      created_at:
        type: string
      metadata:
        additionalProperties: true
        type: object
      role:
        type: string
      token_count:
        type: integer
      uuid:
        type: string
    type: object
  models.Session:
    properties:
      created_at:
        type: string
      deleted_at:
        type: string
      metadata:
        additionalProperties: true
        type: object
      session_id:
        type: string
      updated_at:
        type: string
      uuid:
        type: string
    type: object
  models.Summary:
    properties:
      content:
        type: string
      created_at:
        type: string
      metadata:
        additionalProperties: true
        type: object
      recent_message_uuid:
        description: The most recent message UUID that was used to generate this summary
        type: string
      token_count:
        type: integer
      uuid:
        type: string
    type: object
  server.APIError:
    properties:
      message:
        type: string
    type: object
  server.documentRequest:
    properties:
      documentIDs:
        items:
          type: string
        type: array
      uuids:
        items:
          type: string
        type: array
    type: object
info:
  contact: {}
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  title: Zep REST API
  version: 0.x
paths:
  /api/v1/collections:
    get:
      consumes:
      - application/json
      description: Returns a list of all DocumentCollections.
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items: {}
            type: array
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/server.APIError'
      summary: Gets a list of DocumentCollections
      tags:
      - collection
    post:
      consumes:
      - application/json
      description: If a collection with the same name already exists, an error will
        be returned.
      parameters:
      - description: Name of the Document Collection
        in: path
        name: collectionName
        required: true
        type: string
      - description: Document Collection
        in: body
        name: collection
        required: true
        schema: {}
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: string
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/server.APIError'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/server.APIError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/server.APIError'
      summary: Creates a new DocumentCollection
      tags:
      - collection
  /api/v1/collections/{collectionName}:
    delete:
      consumes:
      - application/json
      description: If a collection with the same name already exists, it will be overwritten.
      parameters:
      - description: Name of the Document Collection
        in: path
        name: collectionName
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: string
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/server.APIError'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/server.APIError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/server.APIError'
      summary: Deletes a DocumentCollection
      tags:
      - collection
    get:
      consumes:
      - application/json
      description: Returns a DocumentCollection if it exists.
      parameters:
      - description: Name of the Document Collection
        in: path
        name: collectionName
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema: {}
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/server.APIError'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/server.APIError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/server.APIError'
      summary: Gets a DocumentCollection
      tags:
      - collection
    patch:
      consumes:
      - application/json
      parameters:
      - description: Name of the Document Collection
        in: path
        name: collectionName
        required: true
        type: string
      - description: Document Collection
        in: body
        name: collection
        required: true
        schema: {}
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: string
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/server.APIError'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/server.APIError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/server.APIError'
      summary: Updates a DocumentCollection
      tags:
      - collection
  /api/v1/collections/{collectionName}/documents:
    delete:
      consumes:
      - application/json
      description: Deletes specified Documents from a DocumentCollection.
      parameters:
      - description: Name of the Document Collection
        in: path
        name: collectionName
        required: true
        type: string
      - description: UUIDs of the Documents to be deleted
        in: body
        name: documentUUIDs
        required: true
        schema:
          items:
            type: string
          type: array
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: string
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/server.APIError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/server.APIError'
      summary: Deletes Documents from a DocumentCollection
      tags:
      - document
    patch:
      consumes:
      - application/json
      description: Updates Documents in a specified DocumentCollection.
      parameters:
      - description: Name of the Document Collection
        in: path
        name: collectionName
        required: true
        type: string
      - description: Array of Documents to be updated
        in: body
        name: documents
        required: true
        schema:
          items: {}
          type: array
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: string
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/server.APIError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/server.APIError'
      summary: Updates Documents in a DocumentCollection
      tags:
      - document
    post:
      consumes:
      - application/json
      description: Creates Documents in a specified DocumentCollection and returns
        their UUIDs.
      parameters:
      - description: Name of the Document Collection
        in: path
        name: collectionName
        required: true
        type: string
      - description: Array of Documents to be created
        in: body
        name: documents
        required: true
        schema:
          items: {}
          type: array
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              type: string
            type: array
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/server.APIError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/server.APIError'
      summary: Creates Documents in a DocumentCollection
      tags:
      - document
  /api/v1/collections/{collectionName}/documents/list:
    post:
      consumes:
      - application/json
      description: Returns specified Documents from a DocumentCollection.
      parameters:
      - description: Name of the Document Collection
        in: path
        name: collectionName
        required: true
        type: string
      - description: UUIDs and IDs of the Documents to be fetched
        in: body
        name: documentRequest
        required: true
        schema:
          $ref: '#/definitions/server.documentRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items: {}
            type: array
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/server.APIError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/server.APIError'
      summary: Gets Documents from a DocumentCollection
      tags:
      - document
  /api/v1/sessions/{sessionId}:
    get:
      consumes:
      - application/json
      description: get session by id
      parameters:
      - description: Session ID
        in: path
        name: sessionId
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Session'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/server.APIError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/server.APIError'
      summary: Returns a session by ID
      tags:
      - session
    post:
      consumes:
      - application/json
      description: add session by id
      parameters:
      - description: Session ID
        in: path
        name: sessionId
        required: true
        type: string
      - description: Session
        in: body
        name: session
        required: true
        schema:
          $ref: '#/definitions/models.Session'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: string
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/server.APIError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/server.APIError'
      summary: Add a session
      tags:
      - session
  /api/v1/sessions/{sessionId}/memory:
    delete:
      consumes:
      - application/json
      description: delete memory messages by session id
      parameters:
      - description: Session ID
        in: path
        name: sessionId
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: string
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/server.APIError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/server.APIError'
      summary: Delete memory messages for a given session
      tags:
      - memory
    get:
      consumes:
      - application/json
      description: get memory by session id
      parameters:
      - description: Session ID
        in: path
        name: sessionId
        required: true
        type: string
      - description: Last N messages. Overrides memory_window configuration
        in: query
        name: lastn
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.Memory'
            type: array
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/server.APIError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/server.APIError'
      summary: Returns a memory (latest summary and list of messages) for a given
        session
      tags:
      - memory
    post:
      consumes:
      - application/json
      description: add memory messages by session id
      parameters:
      - description: Session ID
        in: path
        name: sessionId
        required: true
        type: string
      - description: Memory messages
        in: body
        name: memoryMessages
        required: true
        schema:
          $ref: '#/definitions/models.Memory'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: string
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/server.APIError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/server.APIError'
      summary: Add memory messages to a given session
      tags:
      - memory
  /api/v1/sessions/{sessionId}/search:
    post:
      consumes:
      - application/json
      description: search memory messages by session id and query
      parameters:
      - description: Session ID
        in: path
        name: sessionId
        required: true
        type: string
      - description: Limit the number of results returned
        in: query
        name: limit
        type: integer
      - description: Search query
        in: body
        name: searchPayload
        required: true
        schema:
          $ref: '#/definitions/models.MemorySearchPayload'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.MemorySearchResult'
            type: array
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/server.APIError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/server.APIError'
      summary: Search memory messages for a given session
      tags:
      - search
schemes:
- http
- https
swagger: "2.0"
