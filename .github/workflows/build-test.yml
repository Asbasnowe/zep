# This workflow will build a golang project
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-go

name: Go

on:
  push:
#     branches: [ "main" ]

jobs:

  build:
    runs-on: ubuntu-latest
    container: golang:1.20
    environment: build-test
    services:
      postgres:
        image: ghcr.io/getzep/postgres:latest
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5  
          
    steps:
    - uses: actions/checkout@v3

#    - name: Set up Go
#      uses: actions/setup-go@v4
#      with:
#        go-version: '^1.20'

    - name: Test postgres host lookup
      run: |
        ping postgres -c 5
#    - name: Build
#      run: go build -v ./...
#
#    - name: Test
#      run: go test -p 1 -v ./...
#      env:
#        ZEP_OPENAI_API_KEY: ${{ secrets.ZEP_OPENAI_API_KEY }}
#        ZEP_MEMORY_STORE_POSTGRES_DSN: 'postgres://postgres:postgres@postgres:5432/?sslmode=disable'
